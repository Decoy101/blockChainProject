{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x980fe9267b35b208a1dc16da284E46DafB8910Ca",
    "txHash": "0xb6ab617ef27209563d63f041131219e2a8ca835cf2f5e029e248f3264f18f8ce"
  },
  "proxies": [
    {
      "address": "0x803aEE084F55B96C403f740D599D98394EC518f0",
      "txHash": "0x1e0e58d012a3d11432e7f78093659767f53eb202c5199b6f6d8200626c8b2c56",
      "kind": "transparent"
    },
    {
      "address": "0xc8F1D77F2Db370d6be09D8B3b43C0619583c48CA",
      "txHash": "0x59dff7fe4e1f6c2dcb1061465a507d368283d61b90cc3f65a43ce335eb92c1c9",
      "kind": "transparent"
    },
    {
      "address": "0x45999203F9542509AC96d23368B05e48d736634D",
      "txHash": "0xad9043c9e0000dacafb5a5959c9d578412be56fcf6512d44a788a407bae6ec58",
      "kind": "transparent"
    },
    {
      "address": "0xbF44f8DBbcd78A504fd32Fb7B43421E9634e0023",
      "txHash": "0x699b8bc50f1374566a00fd829ce31a2239fd9e1e7cc28b699a48bb86988f4180",
      "kind": "transparent"
    },
    {
      "address": "0xa3A0A244ebCaCc5a0997b78F1dB7F36Ab7451C81",
      "txHash": "0xa894f68b2121b7f968a74d3470451abcd144b5dd810e4ebe9f0bd71f132dd20f",
      "kind": "transparent"
    },
    {
      "address": "0xf2C1496106C49BD47a5ed1c55522e07A33266aDD",
      "txHash": "0x815036ac4f8c61458db3ec8c49754083363db14d29f0d74f44b307d7d98c5a6d",
      "kind": "transparent"
    },
    {
      "address": "0xB23246489702CE7CF52a50fd2Ee63193d9E4d18C",
      "txHash": "0x44a04ea30315d9c5e56749d4eed5661b055954ef26fdb0faf97802d785eca6b8",
      "kind": "transparent"
    },
    {
      "address": "0x17ba35EE5bC15B61Efec919FE3042e249149AB8d",
      "txHash": "0x16052db5bfe9359d2bf5710fea59e923b61858f14da396853802ba3264d3b528",
      "kind": "transparent"
    },
    {
      "address": "0x305a1f183a9A23Cf6aa3c4856E9bd40BB76A892e",
      "txHash": "0x5764e3f0668c2f4196e77edc818e0437467ec12805e13a1f9455ec0220eca7e5",
      "kind": "transparent"
    },
    {
      "address": "0x38eaD03ad2ab512d123e7C99c18e3865Ad800427",
      "txHash": "0xf858ade662e7edd13f08ef3a4097001678c30a1050bd55f20eaf4ff985216b87",
      "kind": "transparent"
    },
    {
      "address": "0x7CEf6c562b396441C24FF3Ef83061c3149fae14d",
      "txHash": "0x02009578adcab9d0458ac502075b78e299f9f2bd225ed1330b64f0b9cd0b539c",
      "kind": "transparent"
    },
    {
      "address": "0x4727E606FAbB3bD7eC0C139313FF1b0406DB15C9",
      "txHash": "0xfd4b386c04c71cc0e715fefc4ca975a2f6ae292f65853c67669a3f6fbe4c141e",
      "kind": "transparent"
    },
    {
      "address": "0x42B76e38BCeF097f6c3C3AEF3B7801799f3150cC",
      "txHash": "0x64bdbcac9a032b2cf058d5d5607df58c1e6c1d96d3baaaa1613948bc9db1ea83",
      "kind": "transparent"
    },
    {
      "address": "0xcbf31Fb2F11eb5076A34cf448A2CDCED441AC296",
      "txHash": "0x809d91c1c740cfd1245c86559b9d96ab18a00d3bc710e1d235914e10cbefa76f",
      "kind": "transparent"
    },
    {
      "address": "0x0f90eda070b1766e2fb968be56806521e21b6D80",
      "txHash": "0x3aef723be774c638160e11dde4a8501ecb4b33d5766d9640c36c83efb09da3ce",
      "kind": "transparent"
    },
    {
      "address": "0x312C525839485754755100c6F49048E0f5EEF731",
      "txHash": "0xed531df7b2f94445bef7675616d0999d16cef238ed3504ea7c3df2c7e1f1ae38",
      "kind": "transparent"
    },
    {
      "address": "0xB63c1A4BFbD3d669686a548352D6F81d58cfd54d",
      "txHash": "0x3d6fc44a0807861a737d4f8dc30a85c0f133c230bb063f293f6773be7bbba9e6",
      "kind": "transparent"
    },
    {
      "address": "0xA8E4ddf330E6Aef989B307030f41934d51a35716",
      "txHash": "0xc3ff9771c23e2a85b8ee9fe74c8d707ad80042da196fde3bc4f70ae0804e9eaf",
      "kind": "transparent"
    },
    {
      "address": "0xc37D9FFB27Ec98CE5652968fC350Db45085C6D7c",
      "txHash": "0xcde9ecd357df5b38d4248e2a01ca193846d7661b2d403348cdec11f780465806",
      "kind": "transparent"
    },
    {
      "address": "0x1CE606870d666A6Cf5B82c4Ff8381DA8FA82Fb23",
      "txHash": "0x40c7c1851e5e49b4df7663c6018f6a78793b4882fabccecd999dab6341b76fa6",
      "kind": "transparent"
    },
    {
      "address": "0x2328E0A7F3367DDF347bd5656a0E32f31141de6c",
      "txHash": "0x730d43554aeaeab4d498c55f9c7b3fcfb7a1ec01c6ee007eda65eb6d2ffdda97",
      "kind": "transparent"
    },
    {
      "address": "0xaF25C3BFF5B1AE3A694425A0df2B59A44e42aa3D",
      "txHash": "0xcc0ad933f909ebfec4d781c6a547b0f79845d5353dd40b066fc771d8875d960b",
      "kind": "transparent"
    },
    {
      "address": "0xa2cd5b53eF34A0E3Ee48c977Ad38840FfA5FC658",
      "txHash": "0xd0ad7028957a56ef86bde1fb645942f2994fa99ea4f856833a2e05e59c5b740c",
      "kind": "transparent"
    },
    {
      "address": "0x87D1BA3F6D0c5e8b07eA42084D0FC50f79D2ea27",
      "txHash": "0xfdfbb0d49d3322a93815e0ce202557524758d2f87aeb21a4f0f51b7ee5fa56f2",
      "kind": "transparent"
    },
    {
      "address": "0xf6e623fc0Af2F845374323505786fdeaF0705d54",
      "txHash": "0xd8a02063cfc2e1c5f8e49005472f8d2f7f31f5fac0ae45a8d9d85b299075a7e6",
      "kind": "transparent"
    },
    {
      "address": "0x7323fb696316fb291d39909Efb8b7d020F6Ff820",
      "txHash": "0x179bc9902d83ba814f3e86694da9c82dbfbecc2ff3fb96e9bb8f6424e31c2909",
      "kind": "transparent"
    },
    {
      "address": "0x8fF6Ee4B906ffd2b7F6AdA2FFd7021B3A23AF4e8",
      "txHash": "0xcada0a24b7bbf28e21650fea44ea406d8961fff3768c83d3c6d88d3be8315588",
      "kind": "transparent"
    },
    {
      "address": "0x99CBfa455b36bE8EbbF5A41520E106E4d6057cD7",
      "txHash": "0x616aa0c699fe6b3e654bb600c8df314c3a7ec6751b83922c9827433f09f4be4e",
      "kind": "transparent"
    },
    {
      "address": "0x68f3d84bE0DBEE45a622324C89462CdCEF0e7F12",
      "txHash": "0x55b799ccf27f5ac1e413391c62a1aaee38611355e0adb2739c5a384bff954799",
      "kind": "transparent"
    },
    {
      "address": "0x1dD3c27368E98646884b2999815D2dF0ee63d4e9",
      "txHash": "0x410ac7d72c1b48a84ace461403dba199c74840b1feab6c63cef492443b8e6531",
      "kind": "transparent"
    },
    {
      "address": "0x0f9704E357cfA1A7f24938C5033Da9Ec949ab79b",
      "txHash": "0x28f219d893b63da4a6a74fab20a3814fa22b0f619894e1db8aa652fd84d4f861",
      "kind": "transparent"
    },
    {
      "address": "0x8e0100f0816BCfb9ddFb188c6038fFF4D0cF1c67",
      "txHash": "0xd1ffa70060ed5543e01fec2c4e86697755b70a204ee67850cd9b91431f45e7ae",
      "kind": "transparent"
    },
    {
      "address": "0x4d3D3ad5386d14049ADa6BEC810F3D25EFA10CeB",
      "txHash": "0x49ae5150543036a4e26738bd6399b3a7b55220f2bb63b5e13e6943c4684fbec5",
      "kind": "transparent"
    },
    {
      "address": "0x136374E9D6257703D9eBE177B2F0b8627546d7A1",
      "txHash": "0xa084d6e43cf084a0207e4ee3549087308ee0385a105b000d0d8dbbab4560fa91",
      "kind": "transparent"
    },
    {
      "address": "0x452491f84F20D89f0FfaBb28f57dE481c8DDE49f",
      "txHash": "0x3903d3d5dc5cb8be58f4b856837ff0a77ae0373c061ebdc3ae766b7b106b8932",
      "kind": "transparent"
    },
    {
      "address": "0x03339D45dc213E6F839ba1F82e1276CEc832b809",
      "txHash": "0x4e67e73df09a30e2d7f55fb6e92dcc15c6c03d9ba48366436f3ef4f5d3a1f16e",
      "kind": "transparent"
    },
    {
      "address": "0x8Ce9AdD8F811F4a20ED739b25Ff383Bf5223E293",
      "txHash": "0x154010c29a2fb5cf668fc7b31dcf97b2a5c8aa98490a6adad5013655e1cc1594",
      "kind": "transparent"
    },
    {
      "address": "0x1f3B82A4BB61B41125CD8a88465bE6E68658FFe3",
      "txHash": "0x9d6c45b8f7cd4d4912d2c0a0d8156e65462b812796c139a68e3fba1d18f4c75d",
      "kind": "transparent"
    },
    {
      "address": "0xaE3Fc35fA0FC635430F0B74E0ca3a9bCc49AFA1f",
      "txHash": "0xd8da7640738fde253b5ac9dcb057d5671abe70b9e0e8a3223efc0bc87fa4cfee",
      "kind": "transparent"
    },
    {
      "address": "0x24c9cFbcAB4767E6C053a2b444ccf0f678350C34",
      "txHash": "0x3bee3e25083ac6c4c7e4176105f7780edbfbfe233cd07909c99ba68de15b9dbe",
      "kind": "transparent"
    },
    {
      "address": "0x213A92e8630ba6ce988f1454FA752414D42737f8",
      "txHash": "0xb4308fe9c0977a41e79a2e0f13972d29275901a554eb6a539f44b7f0ccb5bd3c",
      "kind": "transparent"
    },
    {
      "address": "0xa1340fa5C6d0D3287c542b786cbc0eFa9F41C485",
      "txHash": "0xf2a9d5f4239713ad5cd22c92d778ae09fd8a8bc540b4c1216bf35fed95c7c7dd",
      "kind": "transparent"
    },
    {
      "address": "0xdbE698ec88F1e847bc09a66585398E84Adc7EA4C",
      "txHash": "0xe28088af00775be9d800fb6f29349cdb02a8efa4a88a8ef04f3e2cb65c8f5f7d",
      "kind": "transparent"
    },
    {
      "address": "0x7FD107dc7bC7bdBb0c3f07fbC10F5D57D6e28a40",
      "txHash": "0xb990ad36f12baf1e16bcdd1bddf43faffa86f4908b47b037d748ed4af5427ae3",
      "kind": "transparent"
    },
    {
      "address": "0xb71A9E9a811990422A784b82045A89E6f4ab1ff4",
      "txHash": "0x1cfd791eae43bd93c4ca2de584cf1e81bf280e1280d6fc4126b97874180912a0",
      "kind": "transparent"
    },
    {
      "address": "0x6F893848dEB002d99099f7294989dB75f7a2657f",
      "txHash": "0xc7bb1317b2a86e57ed2ca41d826f518ae4be1c13462687b27401f4b1e70cb02d",
      "kind": "transparent"
    },
    {
      "address": "0xA6257ccF299673fA861Cb4C841391568aC090ffa",
      "txHash": "0xb5703c3d7ba8c369386b30c28dd40b25305617d3b561d88e6e6ef64ab5fb5938",
      "kind": "transparent"
    },
    {
      "address": "0x0d68bC3cfa8d6674776712E4058ccf5489798B5a",
      "txHash": "0x96b8041ef8e669dbebb7048a59c291f6b0122d0aac0bcc667bbafe30a0a443db",
      "kind": "transparent"
    },
    {
      "address": "0x6B00F67F22Bf5B179c14e0603E6cE1AB619E9a56",
      "txHash": "0xb8a3674eea8049a6aff3f22b9df768e69e4a2b26b0c6d1b8ad3c87e8153bcd7c",
      "kind": "transparent"
    },
    {
      "address": "0xCb5735A6C8192b9cb743b3D0261F3317Bda98784",
      "txHash": "0xf99f6876f25921385383ff2142ee29dcb295beaca151166380e455f67e00fc5b",
      "kind": "transparent"
    },
    {
      "address": "0x20663d38aF793A3044b2C9cF8c8Cac6A6fd5329c",
      "txHash": "0x55019b7e9d40a604a54cad2fd43e592c9a0999beec9c5003fda414473bbca699",
      "kind": "transparent"
    },
    {
      "address": "0x83F96129782033b722138A942640064E06c4bdf8",
      "txHash": "0x94f8c0d85c7b476b9a16dc5c2a3d9a10c5a6979e65222bc8e3ac089add971096",
      "kind": "transparent"
    },
    {
      "address": "0xf83C1B7D0a26a97340E8b6065B05296b25bD58C7",
      "txHash": "0xde5f279258a5d94e8d019e0a94721d4c4cfb33aa0ad176fea731b1a7fcfba8b1",
      "kind": "transparent"
    },
    {
      "address": "0x7505ED07b3AB9C65712B2685D4AE60Fb901471da",
      "txHash": "0x092008bcd7ef1c3e1c8355127b1fa1ac9899d2331345b9fcbb820917c707e0a7",
      "kind": "transparent"
    },
    {
      "address": "0x7546A82074f73Fbc780C135e0AE9A3326b9c9005",
      "txHash": "0xcf503b759a7505b33b4e6dda9f315e6d0b89bfc438ba53dc4c5eb3288ad92812",
      "kind": "transparent"
    },
    {
      "address": "0x5fB64408c05c5A1aA1aD7270fc5F701402D63149",
      "txHash": "0xd87bdfb0292248c678b0ffd39caa7fcfd9b711423614c69bd18977d2a43814bb",
      "kind": "transparent"
    },
    {
      "address": "0x764668dbCd8cea557c3ac3b91f07cd39D4dCDb1A",
      "txHash": "0x79da322c566c84a2dadf91b7ebbc20eecca283558bd4e61adc0f27b29065830a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4b769a7650e917c4f9794a0625849ae133fab3044ef45203d686d61e3fe6a343": {
      "address": "0x915aC50E7B6ba1c84D48C8b3a99B36E05838886C",
      "txHash": "0x88ef40a17198a13063d3066f8f2ca152c8cdc3214053d608aabeb466e5c43552",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2756_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:47"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:49"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2756_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2756_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:54"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2756_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2756_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2744"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2744": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2756_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2756_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bd50e11d4dade86dd47d955243b5e61b1006bc8b736974dad4cb5d849e3e69e8": {
      "address": "0xCF700A8167Dc97Ee069708b4de43F24d70eb22eC",
      "txHash": "0xe056a150f3eeb5ea56751bae561e4d074f735a2377dc8b20f4ae9035566e77cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2800_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:47"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:49"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2800_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2800_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:54"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:58"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2800_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2800_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2788"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2788": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2800_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2800_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d14c712d2326e61d0f46b0185716d941f78fcd11e5054ae9334f8bbdacb2db3e": {
      "address": "0x6D53667ce4e8Ae508367c2A52633033391ea69D9",
      "txHash": "0xd061bb9d19e4704ded38028f9b9c00541737a0f00910514c2ffbc12600847afe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2805_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:48"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2805_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2805_storage)",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:53"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:58"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2805_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2805_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2791"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2791": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2805_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2805_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "52bed7b29c06867feef3334b7bf786552225f6da2ebfa0e45dafb9ad135195f9": {
      "address": "0x488638B51A64fb58C7795b254ea49dFd233EF7f2",
      "txHash": "0x2fe8d2df80d85375d5de55483786c757d254b14a577abab02ed6d924f66ce191",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2814_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:48"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2814_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2814_storage)",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:53"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:58"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2814_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2814_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2800"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2800": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2814_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2814_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3b018e62bbc28be376ce76ce05b8ed8cec290918942da8aaa3966007e7c56d40": {
      "address": "0x63eaE62765d1AB9Cb4e6D682Cf3c804eea6F7197",
      "txHash": "0x7d07428aa0800b41d16683d82e4b08a986835a1855a1048dbd6f82b624b71b1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2814_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:48"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2814_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2814_storage)",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:53"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:58"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2814_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2814_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2800"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2800": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2814_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2814_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "20fc3454da75a7e36f21a3afae9b2ff40d4c1c3af7b98254dcf9fa9554db90cf": {
      "address": "0x55d8c9333B3b4A57B637E92BF81c8F32Bd6A3cb4",
      "txHash": "0x7cb0b215a1e08d28a58a68241fe061ed382aaeeda28371576a062aae89164d10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2814_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:48"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2814_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2814_storage)",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:53"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:58"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2814_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2814_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2800"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2800": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2814_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2814_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0439481099a0bc5b1891a74aa7acb016c1f557ca032ff13440a62aa2a0b4dd2e": {
      "address": "0xcdBe972BD16deD55746d293d0B412cFC7bBDBEcc",
      "txHash": "0x34341ace8507a11e8876d7c3449e7677f5950b26306880341fe098131b82f181",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2813_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:48"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2813_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2813_storage)",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:53"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:58"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2813_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2813_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2799"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2799": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2813_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2813_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ce3ab729786ffe8501d9447470f196ae98e7b5de476595635a7c34f01424fd10": {
      "address": "0x38190bb7057c1F3d7f3Af14d5771815B8D3679e0",
      "txHash": "0x3268a3cc2d6d01a3c0cd6924cbcf00e30398722f326f7af45d8a7e5e93ea53c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Storage",
            "label": "_itemIds",
            "type": "t_struct(Counter)726_storage",
            "src": "../project:/contracts/Storage.sol:19"
          },
          {
            "contract": "Storage",
            "label": "platformPercentageFee",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:23"
          },
          {
            "contract": "Storage",
            "label": "postingPrice",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:25"
          },
          {
            "contract": "Storage",
            "label": "jackpot",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:26"
          },
          {
            "contract": "Storage",
            "label": "firstPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:28"
          },
          {
            "contract": "Storage",
            "label": "secondPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:29"
          },
          {
            "contract": "Storage",
            "label": "thirdPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:30"
          },
          {
            "contract": "Storage",
            "label": "fourthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:31"
          },
          {
            "contract": "Storage",
            "label": "fifthPrize",
            "type": "t_uint256",
            "src": "../project:/contracts/Storage.sol:32"
          },
          {
            "contract": "Storage",
            "label": "posts",
            "type": "t_array(t_struct(Post)2822_storage)dyn_storage",
            "src": "../project:/contracts/Storage.sol:48"
          },
          {
            "contract": "Storage",
            "label": "balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/Storage.sol:50"
          },
          {
            "contract": "Storage",
            "label": "usersPosts",
            "type": "t_mapping(t_address,t_array(t_struct(Post)2822_storage)dyn_storage)",
            "src": "../project:/contracts/Storage.sol:51"
          },
          {
            "contract": "Storage",
            "label": "itemIdToPost",
            "type": "t_mapping(t_uint256,t_struct(Post)2822_storage)",
            "src": "../project:/contracts/Storage.sol:52"
          },
          {
            "contract": "Storage",
            "label": "hasVoted",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "../project:/contracts/Storage.sol:53"
          },
          {
            "contract": "Storage",
            "label": "_uintStorage",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)",
            "src": "../project:/contracts/Storage.sol:55"
          },
          {
            "contract": "Storage",
            "label": "_addressStorage",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/Storage.sol:56"
          },
          {
            "contract": "Storage",
            "label": "_boolStorage",
            "type": "t_mapping(t_string_memory_ptr,t_bool)",
            "src": "../project:/contracts/Storage.sol:57"
          },
          {
            "contract": "Storage",
            "label": "_stringStorage",
            "type": "t_mapping(t_string_memory_ptr,t_string_storage)",
            "src": "../project:/contracts/Storage.sol:58"
          },
          {
            "contract": "Storage",
            "label": "_bytes4Storage",
            "type": "t_mapping(t_string_memory_ptr,t_bytes4)",
            "src": "../project:/contracts/Storage.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)726_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(Post)2822_storage)dyn_storage": {
            "label": "struct Storage.Post[]"
          },
          "t_struct(Post)2822_storage": {
            "label": "struct Storage.Post",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "tokenUrl",
                "type": "t_string_storage"
              },
              {
                "label": "votes",
                "type": "t_uint256"
              },
              {
                "label": "artist",
                "type": "t_address_payable"
              },
              {
                "label": "status",
                "type": "t_enum(Status)2808"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_enum(Status)2808": {
            "label": "enum Storage.Status",
            "members": [
              "OPEN",
              "CLOSED"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Post)2822_storage)dyn_storage)": {
            "label": "mapping(address => struct Storage.Post[])"
          },
          "t_mapping(t_uint256,t_struct(Post)2822_storage)": {
            "label": "mapping(uint256 => struct Storage.Post)"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory_ptr,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)"
          },
          "t_mapping(t_string_memory_ptr,t_bytes4)": {
            "label": "mapping(string => bytes4)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
